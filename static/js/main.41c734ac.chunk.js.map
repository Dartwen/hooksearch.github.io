{"version":3,"sources":["API/REST.js","API/config.js","instruments/delay.js","Search/ModalWindow.js","index.js","Search/index.js","Search/useDebounce.js"],"names":["api","_Config","Api","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","_getCountries","asyncToGenerator","regenerator_default","a","mark","_callee","filter","size","response","_ref","countries","_args","wrap","_context","prev","next","length","undefined","fetch","concat","MAIN_URI","method","sent","json","data","abrupt","stop","_getMovies","_callee2","result","_args2","_context2","BASE_URI","Config","delay","timeout","Promise","resolve","setTimeout","ModalWindow","country","onClick","closeModal","event","preventDefault","react_default","createElement","className","dist_default","name","emoji","capital","continent","native","languages","map","item","join","currencies","ReactDOM","render","_useState","useState","_useState2","slicedToArray","setFilter","_useState3","_useState4","setCountries","_useState5","_useState6","isFetching","setFetching","_useState7","_useState8","modal","setModal","_useState9","_useState10","click","setClick","getCountries","filteredCountries","trim","regexp","RegExp","countriesJSX","replace","dangerouslySetInnerHTML","__html","debouncedFilter","debouncedValue","setDebounceValue","useEffect","timer","clearTimeout","useDebounce","placeholder","style","--inputBorderStyle","type","onChange","target","ModalWindow_ModalWindow","document","getElementById"],"mappings":"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","file":"static/js/main.41c734ac.chunk.js","sourcesContent":["// Instruments\nimport { Config } from './config';\n\nexport const api = new class Api extends Config {\n    async getCountries(filter = '', size = '50') {\n        const response = await fetch(\n            `${this.MAIN_URI}/geo/api/countries?filter=${filter}&size=${size}&case-insensitive=true`,\n            { method: 'GET' },\n        );\n\n        const { data: countries } = await response.json();\n\n        return countries;\n    }\n\n    async getMovies(filter = 'upcoming') {\n        const response = await fetch(`${this.BASE_URI}/afisha/api/${filter}`, {\n            method: 'GET',\n        });\n        const result = await response.json();\n\n        return result;\n    }\n}();\n","export class Config {\r\n    MAIN_URI = 'https://lab.lectrum.io';\r\n}\r\n","export const delay = (timeout = 1000) => new Promise((resolve) => setTimeout(resolve, timeout));\r\n","import React from 'react';\r\nimport Tilt from 'react-vanilla-tilt';\r\n\r\nexport const ModalWindow = ({country, onClick}) =>{\r\n    const closeModal = (event) =>{\r\n        event.preventDefault();\r\n        \r\n        if (onClick) {\r\n            onClick();\r\n        }\r\n    };\r\n   \r\n    return (\r\n        <div className = 'modal'>\r\n            <Tilt\r\n                className = 'tilt'>\r\n                <div className = 'content'>\r\n                    <h1>{country.name} {country.emoji}</h1>\r\n                    <ul>\r\n                        <li>\r\n                            <span>Столица:</span>\r\n                            <span>{country.capital}</span>\r\n                        </li>\r\n                        <li>\r\n                            <span>Континент:</span>\r\n                            <span>{country.continent}</span>\r\n                        </li>\r\n                        <li>\r\n                            <span>Народное имя страны:</span>\r\n                            <span>{country.native}</span>\r\n                        </li>\r\n                        <li>\r\n                            <span>Языки:</span>\r\n                            <span>{country.languages.map((item) => {\r\n                                return item.native;\r\n                            }).join(', ')}\r\n                            </span>\r\n\r\n                        </li>\r\n                        <li>\r\n                            <span>Валюты:</span>\r\n                            {country.currencies.map((item, key) => {\r\n                                return <span key = { key }>{item}</span>;\r\n                            })}\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div\r\n                    className = 'close'\r\n                    onClick = { (event) => closeModal(event) } >\r\n                </div>\r\n            </Tilt>\r\n        </div>\r\n    );\r\n};\r\n","// Core\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Theme\nimport './theme/init.css';\n\n// App\n// import { Player } from './components-2/Player';\n// ReactDOM.render(<Player />, document.getElementById('root'));\n\n// App\nimport { Search } from './Search';\n\nReactDOM.render(<Search />, document.getElementById('root'));\n","// Core\nimport React, { useState, useEffect } from 'react';\n\n// Instruments\nimport './styles.css';\nimport { api } from '../API';\nimport { delay } from '../instruments';\n\nimport { useDebounce } from './useDebounce';\nimport { ModalWindow } from './ModalWindow';\n\nexport const Search = () => {\n    const [ filter, setFilter ] = useState('');\n    const [ countries, setCountries ]  = useState([]);\n    const [ isFetching, setFetching ] = useState(false);\n    const [ modal, setModal ] = useState();\n    const [ click, setClick ] = useState(false);\n\n    const getCountries = async () => {\n        setFetching(true);\n        const filteredCountries = await api.getCountries(filter.trim());\n        await delay(200);\n        setCountries(filteredCountries);\n        setFetching(false);\n    };\n\n    const regexp = new RegExp(filter, 'g');\n    const countriesJSX = countries.map((country) => {\n        \n        const name = country.name.replace(\n            regexp,\n            `<span class='highlight'>${ filter }</span>`,\n        );\n        const  continent = country.continent.replace(\n            regexp,\n            `<span class='highlight'>${ filter }</span>`,\n        );\n\n\n        return (\n            <li key = { country.emoji }>\n                <span\n                    className = 'country'\n                    dangerouslySetInnerHTML = {{\n                        __html: `${name}, ${continent}`,\n                    }}\n                    onClick = { () => {\n                        setClick(true);\n                        setModal(country);\n                    }\n                    }\n                />\n                <span className = 'flag'>{country.emoji}</span>\n            </li>\n        );\n    });\n\n    const debouncedFilter = useDebounce(filter, 200);\n    useEffect(() => {\n        getCountries();\n    }, [ debouncedFilter ]);\n\n    return (\n        <section className = 'strange-search'>\n            <span className = 'strange'>Странный</span>\n            <input\n                placeholder = 'Страна или континент'\n                style = {{\n                    '--inputBorderStyle': isFetching ? 'dashed' : 'solid',\n                }}\n                type = 'text'\n                value = { click ? modal.name : filter }\n                onChange = { (event) => setFilter(event.target.value) }\n            />\n            <span className = 'search'>поиск</span>\n            <ul>\n                {countriesJSX}\n            </ul>\n            {click ? <ModalWindow\n                country = { modal }\n                onClick = { () => {\n                    setClick(false);\n                    setFilter('');\n                } }\n            /> : null}\n            <b />\n        </section>\n    );\n};\n","import {useState, useEffect} from 'react';\n\n\nexport const useDebounce = (value, delay) => {\n    const  [ debouncedValue, setDebounceValue ] = useState(value);\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            setDebounceValue(value);\n        }, delay);\n\n        return () => {\n            clearTimeout(timer);\n        };\n    }, [ value ]);\n\n    return debouncedValue;\n};\n"],"sourceRoot":""}